worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  /var/log/nginx/access.log  main;
    #error_log   /var/log/nginx/error.log;

    sendfile        on;
    keepalive_timeout  65;

    # 全局 CORS 设置（优化项）
    map $http_origin $cors_header {
        default "";
        ~^https?://(localhost|192\.168\.56\.15(?::\d+)?)$ $http_origin;
    }

    # 定义MinIO后端（单节点示例）
    upstream minio_backend {
        server 192.168.56.14:9000;  # MinIO服务地址
    }

   server {
        listen       80;
        server_name  192.168.56.15;

        # 统一 CORS 处理（优化项）
        add_header 'Access-Control-Allow-Origin' $cors_header always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        location /admin-api/ {
            proxy_pass http://192.168.56.15:8080;

            # 必须明确的 multipart 支持配置
            proxy_set_header Content-Type $content_type;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 文件上传特殊配置
            client_max_body_size 1024m;  # 根据业务需求调整大小
            proxy_request_buffering off; # 禁用请求缓冲
            proxy_http_version 1.1;
            proxy_set_header Connection "";

            # 缓冲区优化
            proxy_buffer_size 128k;
            proxy_buffers 8 256k;
            proxy_busy_buffers_size 512k;

            # 超时时间调整
            proxy_connect_timeout 600;
            proxy_send_timeout 600;
            proxy_read_timeout 600;
            send_timeout 600;

            # 处理 OPTIONS 请求（优化项）
            if ($request_method = OPTIONS) {
                return 204;
            }
        }

        # 全局 WebSocket 超时设置（可选）
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;

        # WebSocket 代理配置 - /infra/ws
        location /infra/ws {
            proxy_pass http://192.168.21.130:8080/infra/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;

            # 特别针对 WebSocket 的超时设置
            proxy_read_timeout 86400s;  # 24小时 (60*60*24)
            proxy_send_timeout 86400s;
            proxy_connect_timeout 300s;  # 连接超时保持较短

            # 保持长连接配置
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /app {
            # 可选：强制重定向到带斜杠的路径
            return 301 /app/;
            # 或直接返回目标文件
            # alias /usr/local/openresty/nginx/html/h5/;
            # try_files index.html =404;
        }

        # 处理 /app 路径请求
        location ^~ /app/ {
            alias /usr/local/openresty/nginx/html/app/;  # 关键：使用 alias 并确保路径末尾有 /
            index index.html index.htm;

            # 单页应用路由回退逻辑
            try_files $uri $uri/ /app/index.html;

            # 静态资源缓存配置
            expires 1d;
            add_header Cache-Control "public, no-transform";

            # 处理路径不存在的情况（兼容深层路由）
            if (!-e $request_filename) {
                rewrite ^/app/(.*) /app/index.html last;
            }
        }

        # 关键：路径重写与代理
        location /static/resource/ {
            rewrite ^/static/resource/(.*)$ /emergency-document/$1 break;  # 路径重写[1,8](@ref)
            proxy_pass http://minio_backend;  # 指向MinIO后端
            proxy_set_header Host $http_host;  # 传递原始Host头（避免签名错误）[5,9](@ref)
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 300;        # 连接超时300秒
            proxy_http_version 1.1;            # 启用HTTP/1.1长连接
            proxy_set_header Connection "";    # 清空Connection头
            chunked_transfer_encoding off;     # 禁用分块传输
        }

        # 其他配置（例如根路径 / 的处理）
        location / {
            root /usr/local/openresty/nginx/html/admin;
            try_files $uri $uri/ /index.html;

            # 静态文件缓存设置
            expires 1d;
            add_header Cache-Control "public, no-transform";
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root html;
        }
    }
}
